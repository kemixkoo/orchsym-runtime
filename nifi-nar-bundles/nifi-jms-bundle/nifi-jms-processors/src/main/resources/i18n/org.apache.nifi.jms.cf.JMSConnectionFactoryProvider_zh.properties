__CapabilityDescription=Provides a generic service to create vendor specific javax.jms.ConnectionFactory implementations. ConnectionFactory can be served once this service is configured successfully
__Tags=jms, messaging, integration, queue, topic, publish, subscribe
cf.displayName=MQ ConnectionFactory Implementation
cf.description=A fully qualified name of the JMS ConnectionFactory implementation class (i.e., org.apache.activemq.ActiveMQConnectionFactory)
cflib.displayName=MQ Client Libraries path (i.e., /usr/jms/lib)
cflib.description=Path to the directory with additional resources (i.e., JARs, configuration files etc.) to be added to the classpath. Such resources typically represent target MQ client libraries for the ConnectionFactory implementation.
broker.displayName=Broker URI
broker.description=URI pointing to the network location of the JMS Message broker. For example, 'tcp\://myhost\:61616' for ActiveMQ or 'myhost\:1414' for IBM MQ
SSL_Context_Service.displayName=SSL Context Service
SSL_Context_Service.description=The SSL Context Service used to provide client certificate information for TLS/SSL connections.
The_name_of_a_Connection_Factory_configuration_property..description=The properties that are set following Java Beans convention where a property name is derived from the 'set*' method of the vendor specific ConnectionFactory's implementation. For example, 'com.ibm.mq.jms.MQConnectionFactory.setChannel(String)' would imply 'channel' property and 'com.ibm.mq.jms.MQConnectionFactory.setTransportType(int)' would imply 'transportType' property.
