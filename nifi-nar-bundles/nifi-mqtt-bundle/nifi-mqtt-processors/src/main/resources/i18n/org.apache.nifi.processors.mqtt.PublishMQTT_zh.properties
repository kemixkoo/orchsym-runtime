__CapabilityDescription=Publishes a message to an MQTT topic
__Tags=publish, MQTT, IOT
Broker_URI.displayName=Broker URI
Broker_URI.description=The URI to use to connect to the MQTT broker (e.g. tcp\://localhost\:1883). The 'tcp' and 'ssl' schemes are supported. In order to use 'ssl', the SSL Context Service property must be set.
Client_ID.displayName=Client ID
Client_ID.description=MQTT client ID to use
Username.displayName=Username
Username.description=Username to use when connecting to the broker
Password.displayName=Password
Password.description=Password to use when connecting to the broker
SSL_Context_Service.displayName=SSL Context Service
SSL_Context_Service.description=The SSL Context Service used to provide client certificate information for TLS/SSL connections.
Last_Will_Topic.displayName=Last Will Topic
Last_Will_Topic.description=The topic to send the client's Last Will to. If the Last Will topic and message are not set then a Last Will will not be sent.
Last_Will_Message.displayName=Last Will Message
Last_Will_Message.description=The message to send as the client's Last Will. If the Last Will topic and message are not set then a Last Will will not be sent.
Last_Will_Retain.displayName=Last Will Retain
Last_Will_Retain.description=Whether to retain the client's Last Will. If the Last Will topic and message are not set then a Last Will will not be sent.
__AllowableValue.Last_Will_Retain.false.displayName=false
__AllowableValue.Last_Will_Retain.true.displayName=true
Last_Will_QoS_Level.displayName=Last Will QoS Level
Last_Will_QoS_Level.description=QoS level to be used when publishing the Last Will Message
__AllowableValue.Last_Will_QoS_Level.0.displayName=0 - At most once
__AllowableValue.Last_Will_QoS_Level.0.description=Best effort delivery. A message won\u2019t be acknowledged by the receiver or stored and redelivered by the sender. This is often called \u201cfire and forget\u201d and provides the same guarantee as the underlying TCP protocol.
__AllowableValue.Last_Will_QoS_Level.1.displayName=1 - At least once
__AllowableValue.Last_Will_QoS_Level.1.description=Guarantees that a message will be delivered at least once to the receiver. The message can also be delivered more than once
__AllowableValue.Last_Will_QoS_Level.2.displayName=2 - Exactly once
__AllowableValue.Last_Will_QoS_Level.2.description=Guarantees that each message is received only once by the counterpart. It is the safest and also the slowest quality of service level. The guarantee is provided by two round-trip flows between sender and receiver.
Session_state.displayName=Session state
Session_state.description=Whether to start afresh or resume previous flows. See the allowable value descriptions for more details.
__AllowableValue.Session_state.false.displayName=Resume Session
__AllowableValue.Session_state.false.description=Server resumes communications with the client based on state from the current session (as identified by the ClientID). The client and server store the session after the client and server are disconnected. After the disconnection of a session that was not a clean session, the server stores further QoS 1 and QoS 2 messages that match any subscriptions that the client had at the time of disconnection as part of the session state
__AllowableValue.Session_state.true.displayName=Clean Session
__AllowableValue.Session_state.true.description=Client and Server discard any previous session and start a new one. This session lasts as long as the network connection. State data associated with this session is not reused in any subsequent session
MQTT_Specification_Version.displayName=MQTT Specification Version
MQTT_Specification_Version.description=The MQTT specification version when connecting with the broker. See the allowable value descriptions for more details.
__AllowableValue.MQTT_Specification_Version.0.displayName=AUTO
__AllowableValue.MQTT_Specification_Version.0.description=Start with v3.1.1 and fallback to v3.1.0 if not supported by a broker
__AllowableValue.MQTT_Specification_Version.3.displayName=v3.1.0
__AllowableValue.MQTT_Specification_Version.4.displayName=v3.1.1
Connection_Timeout_seconds.displayName=Connection Timeout (seconds)
Connection_Timeout_seconds.description=Maximum time interval the client will wait for the network connection to the MQTT server to be established. The default timeout is 30 seconds. A value of 0 disables timeout processing meaning the client will wait until the network connection is made successfully or fails.
Keep_Alive_Interval_seconds.displayName=Keep Alive Interval (seconds)
Keep_Alive_Interval_seconds.description=Defines the maximum time interval between messages sent or received. It enables the client to detect if the server is no longer available, without having to wait for the TCP/IP timeout. The client will ensure that at least one message travels across the network within each keep alive period. In the absence of a data-related message during the time period, the client sends a very small "ping" message, which the server will acknowledge. A value of 0 disables keepalive processing in the client.
Topic.displayName=Topic
Topic.description=The topic to publish the message to.
Quality_of_ServiceQoS.displayName=Quality of Service(QoS)
Quality_of_ServiceQoS.description=The Quality of Service(QoS) to send the message with. Accepts three values '0', '1' and '2'; '0' for 'at most once', '1' for 'at least once', '2' for 'exactly once'. Expression language is allowed in order to support publishing messages with different QoS but the end value of the property must be either '0', '1' or '2'. 
Retain_Message.displayName=Retain Message
Retain_Message.description=Whether or not the retain flag should be set on the MQTT message.
__Relationship.success.description=FlowFiles that are sent successfully to the destination are transferred to this relationship.
__Relationship.failure.description=FlowFiles that failed to send to the destination are transferred to this relationship.
__SystemResource.MEMORY.description=An instance of this component can cause high usage of this system resource.  Multiple instances or high concurrency settings may result a degradation of performance.
