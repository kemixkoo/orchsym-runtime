# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Core Properties #
orchsym.flow.configuration.file=./conf/flow.xml.gz
orchsym.flow.configuration.archive.enabled=true
orchsym.flow.configuration.archive.dir=./conf/archive/
orchsym.flow.configuration.archive.max.time=30 days
orchsym.flow.configuration.archive.max.storage=500 MB
orchsym.flow.configuration.archive.max.count=
orchsym.flowcontroller.autoResumeState=false
orchsym.flowcontroller.graceful.shutdown.period=10 sec
orchsym.flowservice.writedelay.interval=500 ms
orchsym.administrative.yield.duration=30 sec
# If a component has no work to do (is "bored"), how long should we wait before checking again for work?
orchsym.bored.yield.duration=10 millis
orchsym.queue.backpressure.count=10000
orchsym.queue.backpressure.size=1 GB

orchsym.authorizer.configuration.file=./conf/authorizers.xml
orchsym.login.identity.provider.configuration.file=./conf/login-identity-providers.xml
orchsym.templates.directory=./conf/templates
orchsym.ui.banner.text=
orchsym.ui.autorefresh.interval=30 sec
orchsym.nar.library.directory=./lib
orchsym.nar.working.directory=./work/nar/
orchsym.documentation.working.directory=./work/docs/components

#true, will be in headless mode. means without web UI, only a server for restful api
orchsym.headless=${orchsym.headless}
#if empty, will be use the locale of OS. can set like zh_CN
orchsym.locale=${orchsym.locale}
#how many times of the component to retry when failure
orchsym.exception.tolerance.count=50
#maxTimerDrivenThreads
orchsym.timer.driven.max.threads=64
#maxEventDrivenThreads
orchsym.event.driven.max.threads=5

####################
# State Management #
####################
orchsym.state.management.configuration.file=./conf/state-management.xml
# The ID of the local state provider
orchsym.state.management.provider.local=local-provider
# The ID of the cluster-wide state provider. This will be ignored if Orchsym is not clustered but must be populated if running in a cluster.
orchsym.state.management.provider.cluster=zk-provider
# Specifies whether or not this instance of Orchsym should run an embedded ZooKeeper server
orchsym.state.management.embedded.zookeeper.start=false
# Properties file that provides the ZooKeeper properties to use if <Orchsym.state.management.embedded.zookeeper.start> is set to true
orchsym.state.management.embedded.zookeeper.properties=./conf/zookeeper.properties


# H2 Settings
orchsym.database.directory=./database_repository
orchsym.h2.url.append=;LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE

# FlowFile Repository
orchsym.flowfile.repository.implementation=org.apache.nifi.controller.repository.WriteAheadFlowFileRepository
orchsym.flowfile.repository.wal.implementation=org.apache.nifi.wali.SequentialAccessWriteAheadLog
orchsym.flowfile.repository.directory=./flowfile_repository
orchsym.flowfile.repository.partitions=256
orchsym.flowfile.repository.checkpoint.interval=2 mins
orchsym.flowfile.repository.always.sync=false

orchsym.swap.manager.implementation=org.apache.nifi.controller.FileSystemSwapManager
orchsym.queue.swap.threshold=20000
orchsym.swap.in.period=5 sec
orchsym.swap.in.threads=1
orchsym.swap.out.period=5 sec
orchsym.swap.out.threads=4

# Content Repository
orchsym.content.repository.implementation=org.apache.nifi.controller.repository.FileSystemRepository
orchsym.content.claim.max.appendable.size=1 MB
orchsym.content.claim.max.flow.files=100
orchsym.content.repository.directory.default=./content_repository
orchsym.content.repository.archive.max.retention.period=12 hours
orchsym.content.repository.archive.max.usage.percentage=50%
orchsym.content.repository.archive.enabled=true
orchsym.content.repository.always.sync=false
orchsym.content.viewer.url=../nifi-content-viewer/

# Provenance Repository Properties
orchsym.provenance.repository.implementation=org.apache.nifi.provenance.PersistentProvenanceRepository
orchsym.provenance.repository.debug.frequency=1_000_000
orchsym.provenance.repository.encryption.key.provider.implementation=
orchsym.provenance.repository.encryption.key.provider.location=
orchsym.provenance.repository.encryption.key.id=
orchsym.provenance.repository.encryption.key=

# Persistent Provenance Repository Properties
orchsym.provenance.repository.directory.default=./provenance_repository
orchsym.provenance.repository.max.storage.time=24 hours
orchsym.provenance.repository.max.storage.size=1 GB
orchsym.provenance.repository.rollover.time=30 secs
orchsym.provenance.repository.rollover.size=100 MB
orchsym.provenance.repository.query.threads=2
orchsym.provenance.repository.index.threads=2
orchsym.provenance.repository.compress.on.rollover=true
orchsym.provenance.repository.always.sync=false
orchsym.provenance.repository.journal.count=16
# Comma-separated list of fields. Fields that are not indexed will not be searchable. Valid fields are: 
# EventType, FlowFileUUID, Filename, TransitURI, ProcessorID, AlternateIdentifierURI, Relationship, Details
orchsym.provenance.repository.indexed.fields=EventType, FlowFileUUID, Filename, ProcessorID, Relationship
# FlowFile Attributes that should be indexed and made searchable.  Some examples to consider are filename, uuid, mime.type
orchsym.provenance.repository.indexed.attributes=
# Large values for the shard size will result in more Java heap usage when searching the Provenance Repository
# but should provide better performance
orchsym.provenance.repository.index.shard.size=500 MB
# Indicates the maximum length that a FlowFile attribute can be when retrieving a Provenance Event from
# the repository. If the length of any attribute exceeds this value, it will be truncated when the event is retrieved.
orchsym.provenance.repository.max.attribute.length=65536
orchsym.provenance.repository.concurrent.merge.threads=2
orchsym.provenance.repository.warm.cache.frequency=1 hour

# Volatile Provenance Respository Properties
orchsym.provenance.repository.buffer.size=100000

# Component Status Repository
orchsym.components.status.repository.implementation=org.apache.nifi.controller.status.history.VolatileComponentStatusRepository
orchsym.components.status.repository.buffer.size=1440
orchsym.components.status.snapshot.frequency=1 min

# Site to Site properties
orchsym.remote.input.host=
orchsym.remote.input.secure=false
orchsym.remote.input.socket.port=
orchsym.remote.input.http.enabled=true
orchsym.remote.input.http.transaction.ttl=30 sec
orchsym.remote.contents.cache.expiration=30 secs

# web properties #
orchsym.web.war.directory=./lib
orchsym.web.http.host=
orchsym.web.http.port=8080
orchsym.web.http.network.interface.default=
orchsym.web.https.host=
orchsym.web.https.port=
orchsym.web.https.network.interface.default=
orchsym.web.jetty.working.directory=./work/jetty
orchsym.web.jetty.threads=200
orchsym.web.max.header.size=16 KB
orchsym.web.proxy.context.path=
orchsym.web.proxy.host=
orchsym.web.path=runtime

# security properties #
orchsym.sensitive.props.key=
orchsym.sensitive.props.key.protected=
orchsym.sensitive.props.algorithm=PBEWITHMD5AND256BITAES-CBC-OPENSSL
orchsym.sensitive.props.provider=BC
orchsym.sensitive.props.additional.keys=

orchsym.security.keystore=
orchsym.security.keystoreType=
orchsym.security.keystorePasswd=
orchsym.security.keyPasswd=
orchsym.security.truststore=
orchsym.security.truststoreType=
orchsym.security.truststorePasswd=
orchsym.security.needClientAuth=
orchsym.security.user.authorizer=managed-authorizer
orchsym.security.user.login.identity.provider=
orchsym.security.ocsp.responder.url=
orchsym.security.ocsp.responder.certificate=

# OpenId Connect SSO Properties #
orchsym.security.user.oidc.discovery.url=
orchsym.security.user.oidc.connect.timeout=5 secs
orchsym.security.user.oidc.read.timeout=5 secs
orchsym.security.user.oidc.client.id=
orchsym.security.user.oidc.client.secret=
orchsym.security.user.oidc.preferred.jwsalgorithm=

# Apache Knox SSO Properties #
orchsym.security.user.knox.url=
orchsym.security.user.knox.publicKey=
orchsym.security.user.knox.cookieName=hadoop-jwt
orchsym.security.user.knox.audiences=

# Identity Mapping Properties #
# These properties allow normalizing user identities such that identities coming from different identity providers
# (certificates, LDAP, Kerberos) can be treated the same internally in Orchsym. The following example demonstrates normalizing
# DNs from certificates and principals from Kerberos into a common identity string:
#
# orchsym.security.identity.mapping.pattern.dn=^CN=(.*?), OU=(.*?), O=(.*?), L=(.*?), ST=(.*?), C=(.*?)$
# orchsym.security.identity.mapping.value.dn=$1@$2
# orchsym.security.identity.mapping.transform.dn=NONE
# orchsym.security.identity.mapping.pattern.kerb=^(.*?)/instance@(.*?)$
# orchsym.security.identity.mapping.value.kerb=$1@$2
# orchsym.security.identity.mapping.transform.kerb=UPPER

# Group Mapping Properties #
# These properties allow normalizing group names coming from external sources like LDAP. The following example
# lowercases any group name.
#
# orchsym.security.group.mapping.pattern.anygroup=^(.*)$
# orchsym.security.group.mapping.value.anygroup=$1
# orchsym.security.group.mapping.transform.anygroup=LOWER

# cluster common properties (all nodes must have same values) #
orchsym.cluster.protocol.heartbeat.interval=5 sec
orchsym.cluster.protocol.is.secure=false

# cluster node properties (only configure for cluster nodes) #
orchsym.cluster.is.node=false
orchsym.cluster.node.address=
orchsym.cluster.node.protocol.port=
orchsym.cluster.node.protocol.threads=10
orchsym.cluster.node.protocol.max.threads=50
orchsym.cluster.node.event.history.size=25
orchsym.cluster.node.connection.timeout=5 sec
orchsym.cluster.node.read.timeout=5 sec
orchsym.cluster.node.max.concurrent.requests=100
orchsym.cluster.firewall.file=
orchsym.cluster.flow.election.max.wait.time=5 mins
orchsym.cluster.flow.election.max.candidates=

# zookeeper properties, used for cluster management #
orchsym.zookeeper.connect.string=
orchsym.zookeeper.connect.timeout=3 secs
orchsym.zookeeper.session.timeout=3 secs
orchsym.zookeeper.root.node=/orchsym

# Zookeeper properties for the authentication scheme used when creating acls on znodes used for cluster management
# Values supported for Orchsym.zookeeper.auth.type are "default", which will apply world/anyone rights on znodes
# and "sasl" which will give rights to the sasl/kerberos identity used to authenticate the Orchsym node
# The identity is determined using the value in Orchsym.kerberos.service.principal and the removeHostFromPrincipal
# and removeRealmFromPrincipal values (which should align with the kerberos.removeHostFromPrincipal and kerberos.removeRealmFromPrincipal
# values configured on the zookeeper server).
orchsym.zookeeper.auth.type=
orchsym.zookeeper.kerberos.removeHostFromPrincipal=
orchsym.zookeeper.kerberos.removeRealmFromPrincipal=

# kerberos #
orchsym.kerberos.krb5.file=

# kerberos service principal #
orchsym.kerberos.service.principal=
orchsym.kerberos.service.keytab.location=

# kerberos spnego principal #
orchsym.kerberos.spnego.principal=
orchsym.kerberos.spnego.keytab.location=
orchsym.kerberos.spnego.authentication.expiration=12 hours

# external properties files for variable registry
# supports a comma delimited list of file locations
orchsym.variable.registry.properties=